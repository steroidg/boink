#!/usr/bin/env bash

print_usage () {
  local readonly PROGNAME="${1}"
  if [ -z "${PROGNAME}" ]; then
    echo "f[${FUNCNAME}]:l[${LINENO}] ERROR: No program name specified."
    return 1
  fi

  echo "A script to spawn tmux sessions/layouts I like"
  echo ""
  echo "Usage: ${PROGNAME} layout"
  echo "    layout: layout 1 (codeing) or 2 (terms)"
  echo ""
  echo "  Options:"
  echo "    -d: Debug mode."
  echo "    -s: Starting directory."
  echo "    -h: Print out this message."

  return 0
}

layout_1() {
  [ -z "${TMUX}" ] && tmux new-session -d -s 'coding' 'bash'
  tmux split-window -v -l5 'sleep 1; tmux resize-pane -y 9; tmux select-pane -t:.1; bash'
  tmux split-window -h 'bash'
  [ -z "${TMUX}" ] && tmux -2 attach-session -d

  return 0
}

layout_2() {
  [ -z "${TMUX}" ] && tmux new-session -d -s 'terms' 'bash'
  tmux split-window -h 'bash'
  tmux split-window -v 'bash'
  tmux select-layout tiled
  tmux split-window -v 'bash'
  tmux select-layout tiled
  tmux split-window -v 'bash'
  tmux select-layout tiled
  tmux split-window -v 'bash'
  tmux select-layout tiled
  tmux select-pane -t:.1
  [ -z "${TMUX}" ] && tmux -2 attach-session -d
}

layout_3() {
  [ -z "${TMUX}" ] && tmux new-session -d -s 'coding' 'bash'
  tmux split-window -v -l5 'sleep 1; tmux resize-pane -y 9; tmux select-pane -t:.1; bash'
  tmux split-window -h -p 66 'bash'
  tmux split-window -h -p 50 'bash'
  [ -z "${TMUX}" ] && tmux -2 attach-session -d

  return 0
}

main () {
  DEBUG_MODE='OFF'
  local readonly PROGNAME=`basename $0`
  local START_DIR=''

  while getopts dhs: opts; do
    case ${opts} in
      d) DEBUG_MODE='ON'
         ;;
      s) local START_DIR=${OPTARG}
         ;;
      h) print_usage ${PROGNAME}
         exit 0
         ;;
      *) print_usage ${PROGNAME}
         exit 0
         ;;
    esac
  done
  shift `expr ${OPTIND} - 1`

  readonly DEBUG_MODE;

  if [ $# -lt 1 ]; then
    echo "ERROR: Wrong number of arguments."
    print_usage ${PROGNAME}
    exit 1
  fi

  readonly START_DIR
  local readonly LAYOUT=${1}

  if [ -n "${START_DIR}" ]; then
    if [ ! -d ${START_DIR} ]; then
      echo "f[${FUNCNAME}]:l[${LINENO}] ERROR: ${START_DIR} is not a directory."
      exit 1
    fi
    cd ${START_DIR}
  fi

  case ${LAYOUT} in
    1) layout_1 || exit 1
      ;;
    2) layout_2 || exit 1
      ;;
    3) layout_3 || exit 1
      ;;
    *)
      echo "f[${FUNCNAME}]:l[${LINENO}] ERROR: Invalid layout [${LAYOUT}]."
      print_usage ${PROGNAME}
      exit 1
      ;;
  esac
  exit 0
}

main "$@"
